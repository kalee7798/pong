# https://py2.codeskulptor.org/#user48_mfGS4Uu5fj_5.py
# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400
BALL_RADIUS = 10
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
paddle1_pos = [0,0]
paddle2_pos = [0,0]
score1 = 0
score2 = 0

# initialize ball_pos and ball_vel for new bal in middle of table
ball_pos = [300,200]
ball_vel = [0,0]
paddle1_vel = 0
paddle2_vel = 0
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel # these are vectors stored as lists
    ball_pos = [300,200]
    direction = random.randrange(1,3)
    if direction == 1:
        LEFT = False
        RIGHT = True
        ball_vel[0] = random.randrange(3,5) # x-axis
        ball_vel[1] = random.randrange(2,4) # y-axis
    if direction == 2:
        RIGHT = False
        Left = True
        ball_vel[0] = random.randrange(3,5) # x-axis
        ball_vel[1] = random.randrange(2,4) # y-axis
    ball_pos = [300,200]
    if RIGHT == False:
        ball_vel[0] = ball_vel[0] * -1
    elif LEFT == False:
        ball_vel[0] = ball_vel[0] * 1

# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    score1 = 0
    score2 = 0
    spawn_ball(random.randrange(1,3))
    paddle1_pos = [0, 170]
    paddle2_pos = [600, 170]
def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel    
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "Black")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "Black")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "Black")
        
    # update ball
    ball_pos[0] = ball_pos[0] + ball_vel[0] 
    ball_pos[1] = ball_pos[1] + ball_vel[1]
            
    if ball_pos[0] <= BALL_RADIUS + PAD_WIDTH:
        if ball_pos[1] >= paddle1_pos[1] and ball_pos[1] <= paddle1_pos[1] + PAD_HEIGHT:
            ball_vel[0] = -ball_vel[0] * 1.1
             #make it go faster
        elif ball_pos[0] <= 10:
            score1 = score1 + 1
            spawn_ball(1)
    if ball_pos[0] <= BALL_RADIUS + PAD_WIDTH:
        if ball_pos[1] >= paddle2_pos[1] and ball_pos[1] <= paddle2_pos[1] + PAD_HEIGHT:
            ball_vel[0] = -ball_vel[0] * 1.1 #make it go faster
        elif ball_pos[0] >= 580:
            score2 = score2 + 1
            spawn_ball(2)
            
    # draw ball
    canvas.draw_circle(ball_pos, BALL_RADIUS, 10, "Black", "Black")
    # update paddle's vertical position, keep paddle on the screen
    if paddle1_pos[1] + PAD_HEIGHT < HEIGHT:
        paddle1_pos[1] = paddle1_pos[1] + paddle1_vel
    if paddle2_pos[1] + PAD_HEIGHT < HEIGHT:
        paddle1_pos[1] = paddle2_pos[1] + paddle1_vel
    if paddle1_pos[0] > 0:
        paddle1_pos[1] = paddle1_pos[1] + paddle1_vel
    if paddle2_pos[0] > 0:
        paddle2_pos[1] = paddle2_pos[1] + paddle2_vel
    # draw paddles
    canvas.draw_polygon([(PAD_WIDTH, paddle1_pos[1]), (0, paddle1_pos[1]) , (0, paddle1_pos[1] + PAD_HEIGHT),(PAD_WIDTH, paddle1_pos[1] + PAD_HEIGHT)], 1, "black", "black")
    canvas.draw_polygon([(600 - PAD_WIDTH,paddle2_pos[1]),(600 - PAD_WIDTH, paddle2_pos[1] + PAD_HEIGHT), (600, paddle2_pos[1] + PAD_HEIGHT), (600, paddle2_pos[1])], 1,"black", "black")
    # determine whether paddle and ball collide    

    if ball_pos[1] >= 400: #top
        ball_vel[1] = - ball_vel[1]
    if ball_pos[1] <= 0: #bottom
        ball_vel[1] = - ball_vel[1]

        
    # draw scores
    canvas.draw_text(str(score1), [150,100] ,50, "black")
    canvas.draw_text(str(score2), [450,100] ,50, "black")    
def keydown(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["up"]:
        paddle1_vel = paddle1_vel + 5
    if key == simplegui.KEY_MAP["down"]:
        paddle1_vel = paddle1_vel - 5
    if key == simplegui.KEY_MAP["w"]:
        paddle2_vel = paddle2_vel + 5
    if key == simplegui.KEY_MAP["s"]:
        paddle2_vel = paddle2_vel - 5
def keyup(key):
    global paddle1_vel, paddle2_vel
    if key==simplegui.KEY_MAP["up"]:
        paddle1_vel = 0
    if key == simplegui.KEY_MAP["down"]:
        paddle1_vel = 0
    if key == simplegui.KEY_MAP["w"]:
        paddle2_vel = 0
    if key == simplegui.KEY_MAP["s"]:
        paddle2_vel = 0

# create frame
f = simplegui.create_frame("Pong", 600, 400)
f.set_draw_handler(draw)
f.set_keydown_handler(keydown)
f.set_keyup_handler(keyup)
f.set_canvas_background("#f0f8ff")
f.add_button("Restart", new_game, 100)


# start frame
new_game()
f.start()
